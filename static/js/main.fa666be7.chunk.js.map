{"version":3,"sources":["App.tsx","index.tsx","store/context.tsx","translate/index.tsx","common/Header.tsx","common/DialogSmall.tsx","common/Share.tsx","common/Toast.tsx","store/grammarList.ts"],"names":["StartArray","loadable","BottomDrawer","ActiveCardDrawer","App","I18nextProvider","i18n","Container","style","minHeight","ReactDOM","render","document","getElementById","CardsContext","createContext","selectedCard","finishedCards","selectCard","card","addCardToFinish","id","rating","resetCards","allCards","openDrawer","closeDrawer","isDrawerOpened","isSnackBarOpened","setSnackBarMessage","message","snackMessage","setSnackBarOpened","value","CardsProvider","children","savedCards","useMemo","JSON","parse","localStorage","getItem","savedLanguage","hasOwnProperty","useState","grammarList","setAllCards","setSelectedCard","setFinishedCards","setDrawerOpen","setSnackMessage","useEffect","changeLanguage","useCallback","finishedList","setItem","stringify","prevState","filter","el","removeItem","Provider","use","initReactI18next","init","resources","en","translations","friend","ukr","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","useSuspense","Header","useTranslation","open","setOpen","handleClose","handleOpen","Box","display","flexDirection","justifyContent","alignItems","Typography","variant","i18next","t","Select","onClose","onOpen","language","label","onChange","event","target","minWidth","MenuItem","DialogSmall","props","handleConfirm","title","confirm","cancel","Dialog","keepMounted","DialogTitle","DialogActions","Button","onClick","color","BasicSpeedDial","useContext","isOpen","setIsOpen","toggleMenu","actions","icon","name","handleClick","navigator","clipboard","writeText","window","location","href","SpeedDial","ariaLabel","sx","position","bottom","right","map","action","SpeedDialAction","tooltipTitle","Toast","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Math","random","header","description"],"mappings":"6OAQMA,EAAaC,aAAS,kBAAM,iCAC5BC,EAAeD,aAAS,kBAAM,uDAC9BE,EAAmBF,aAAS,kBAAM,iCAmBzBG,EAjBH,WACV,OACE,cAACC,EAAA,EAAD,CAAiBC,KAAMA,IAAvB,SACE,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,SAA/B,UACE,cAAC,IAAD,IACA,cAACT,EAAD,IACA,cAACG,EAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAACD,EAAD,YCjBVQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,2HCA3CC,EAAeC,wBAAc,CAEjCC,aAAc,KACdC,cAAe,GACfC,WAAY,SAACC,KACbC,gBAAiB,SAACC,EAAYC,KAC9BC,WAAY,aACZC,SAAU,GAGVC,WAAY,aACZC,YAAa,aACbC,gBAAgB,EAGhBC,kBAAkB,EAClBC,mBAAoB,SAACC,KACrBC,aAAc,KACdC,kBAAmB,SAACC,OAGPnB,MAER,IAAMoB,EAA6C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrDC,EAAaC,mBAAQ,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,KAAI,IACpFC,EAAgBL,mBAAQ,WAC5B,OAAIG,aAAaG,eAAe,YACvBH,aAAaC,QAAQ,YAEvB,OACN,IAEH,EAAgCG,mBAAiBC,KAAjD,mBAAOrB,EAAP,KAAiBsB,EAAjB,KACA,EAAwCF,mBAAsB,MAA9D,mBAAO5B,EAAP,KAAqB+B,EAArB,KACA,EAA0CH,mBAAQ,OAAMR,QAAN,IAAMA,IAAc,IAAtE,mBAAOnB,EAAP,KAAsB+B,EAAtB,KACA,EAAwCJ,oBAAkB,GAA1D,mBAAOjB,EAAP,KAAuBsB,EAAvB,KACA,EAA8CL,oBAAS,GAAvD,mBAAOhB,EAAP,KAAyBI,EAAzB,KACA,EAAwCY,mBAAwB,MAAhE,mBAAOb,EAAP,KAAqBmB,EAArB,KAEAC,qBAAU,WACJT,GAAepC,IAAK8C,eAAeV,KACtC,CAACA,IAEJ,IAAMjB,EAAa4B,uBAAY,WAC7BJ,GAAc,KACb,IAEGvB,EAAc2B,uBAAY,WAC9BJ,GAAc,KACb,IAEG7B,EAAkBiC,uBACtB,SAAChC,EAAYC,GACXyB,EAAgB,MAChB,IAAMO,EAAY,2BAAQrC,GAAR,kBAAwBI,EAAKC,IAC/CkB,aAAae,QAAQ,gBAAiBjB,KAAKkB,UAAUF,IACrDN,EAAiBM,GACjB5B,MAEF,CAACA,EAAaT,IAGVC,EAAamC,uBACjB,SAAClC,GACKA,GACFM,IACAqB,GAAY,SAACW,GAAD,OAAeA,EAAUC,QAAO,SAACC,GAAD,OAAQA,EAAGtC,KAAOF,EAAKE,UAEnEK,IAEFqB,EAAgB5B,KAElB,CAACO,EAAaD,IAGVF,EAAa8B,uBAAY,WAC7BL,EAAiB,IACjBR,aAAaoB,WAAW,iBACxBd,EAAYD,OACX,IAEGhB,EAAqBwB,uBAAY,SAACvB,GACtCE,GAAkB,GAClBkB,EAAgBpB,KACf,IAEH,OACE,cAAChB,EAAa+C,SAAd,CACE5B,MAAO,CAELjB,eACAC,gBAEAG,kBACAG,aACAC,WACAN,aAEAS,iBACAD,cACAD,aAGAG,mBACAI,oBACAH,qBACAE,gBAnBJ,SAsBGI,M,gCClHP,oBAGA7B,IACGwD,IAAIC,KAEJC,KAAK,CAEJC,UAAW,CACTC,GAAI,CACFC,aAAc,CACZC,OAAQ,WAGZC,IAAK,CACHF,aAAc,CACZC,OAAQ,gDAIdE,YAAa,KACbC,OAAO,EAEPC,GAAI,CAAC,gBACLC,UAAW,eACXC,cAAc,EACdC,cAAe,CACbC,aAAa,EACbC,gBAAiB,KAEnBC,MAAO,CACLC,MAAM,EACNC,aAAa,KAIJ1E,MAAf,G,gQCUe2E,EAxCA,WACb,IAAQ3E,EAAS4E,cAAT5E,KAER,EAAwBsC,oBAAS,GAAjC,mBAAOuC,EAAP,KAAaC,EAAb,KAOMC,EAAchC,uBAAY,WAC9B+B,GAAQ,KACP,IAEGE,EAAajC,uBAAY,WAC7B+B,GAAQ,KACP,IAEH,OACE,cAAC7E,EAAA,EAAD,UACE,eAACgF,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAMC,eAAe,gBAAgBC,WAAW,SAAlF,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BACA,4BAAIC,IAAQC,EAAE,YACd,eAACC,EAAA,EAAD,CACEb,KAAMA,EACNc,QAASZ,EACTa,OAAQZ,EACRrD,MAAO3B,EAAK6F,SACZC,MAAM,MACNC,SAxBa,SAACC,GACpBhG,EAAK8C,eAAekD,EAAMC,OAAOtE,OACjCO,aAAae,QAAQ,WAAY+C,EAAMC,OAAOtE,QAuBxCzB,MAAO,CAAEgG,SAAU,IAPrB,UASE,cAACC,EAAA,EAAD,CAAUxE,MAAM,KAAhB,gBACA,cAACwE,EAAA,EAAD,CAAUxE,MAAM,MAAhB,0B,oCCTKyE,EAlBgB,SAACC,GAC9B,IAAQxB,EAAgFwB,EAAhFxB,KAAME,EAA0EsB,EAA1EtB,YAAauB,EAA6DD,EAA7DC,cAAeC,EAA8CF,EAA9CE,MAA1C,EAAwFF,EAAvCG,eAAjD,MAA2D,MAA3D,IAAwFH,EAAtBI,cAAlE,MAA2E,SAA3E,EAEA,OACE,eAACC,EAAA,EAAD,CAAQ7B,KAAMA,EAAM8B,aAAW,EAAChB,QAASZ,EAAa,kBAAgB,2BAAtE,UACE,cAAC6B,EAAA,EAAD,CAAa7F,GAAG,2BAAhB,SAA4CwF,IAC5C,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAShC,EAAaiC,MAAM,UAAUzB,QAAQ,YAAtD,SACGkB,IAEH,cAACK,EAAA,EAAD,CAAQC,QAAST,EAAeU,MAAM,YAAYzB,QAAQ,YAA1D,SACGiB,W,4DCoBIS,EApCQ,WACrB,IAAQ1F,EAAuB2F,qBAAW1G,KAAlCe,mBAER,EAA4Be,oBAAkB,GAA9C,mBAAO6E,EAAP,KAAeC,EAAf,KAEMC,EAAatE,uBAAY,WAC7BqE,GAAWD,KACV,CAACA,IAEEG,EAAU,CACd,CACEC,KAAM,cAAC,IAAD,IACNC,KAAM,yBACNC,YAAa,WAGXC,UAAUC,UAAUC,UAAUC,OAAOC,SAASC,MAC9CxG,EAAmB,kBAKzB,OACE,cAACyG,EAAA,EAAD,CACEC,UAAU,iBACVpD,KAAMsC,EACNJ,QAASM,EACTa,GAAI,CAAEC,SAAU,WAAYC,OAAQ,GAAIC,MAAO,IAC/Cd,KAAM,cAAC,IAAD,IALR,SAOGD,EAAQgB,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAAmCjB,KAAMgB,EAAOhB,KAAMkB,aAAcF,EAAOf,KAAMT,QAASwB,EAAOd,aAA3Ec,EAAOf,Y,SCnBtBkB,EAfG,WAChB,MAA8DxB,qBAAW1G,KAAjEc,EAAR,EAAQA,iBAAkBG,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,kBAExC,OACE,cAACiH,EAAA,EAAD,CACEC,iBAAkB,KAClBC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7ClE,KAAMvD,EACNE,QAASC,EAETkE,QAAS,kBAAMjE,GAAkB,KAD5BsH,KAAKC,W,8CCoBD1G,IAjCK,CAClB,CACExB,GAAI,EACJmI,OAAQ,QACRC,YAAa,SAEf,CACEpI,GAAI,EACJmI,OAAQ,QACRC,YAAa,SAEf,CACEpI,GAAI,EACJmI,OAAQ,QACRC,YAAa,SAEf,CACEpI,GAAI,EACJmI,OAAQ,QACRC,YAAa,SAEf,CACEpI,GAAI,EACJmI,OAAQ,QACRC,YAAa,SAEf,CACEpI,GAAI,EACJmI,OAAQ,QACRC,YAAa,Y","file":"static/js/main.fa666be7.chunk.js","sourcesContent":["import React from 'react';\nimport { CardsProvider } from 'store/context';\nimport { Container } from '@mui/material';\nimport { Header, Share, Toast } from './common';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from 'translate';\nimport loadable from '@loadable/component';\n\nconst StartArray = loadable(() => import('core/arrays/StartArray'));\nconst BottomDrawer = loadable(() => import('common/drawers/BottomDrawer'));\nconst ActiveCardDrawer = loadable(() => import('common/drawers/ActiveCardDrawer'));\n\nconst App = () => {\n  return (\n    <I18nextProvider i18n={i18n}>\n      <CardsProvider>\n        <Container style={{ minHeight: '100vh' }}>\n          <Header />\n          <StartArray />\n          <ActiveCardDrawer />\n          <Share />\n          <Toast />\n          <BottomDrawer />\n        </Container>\n      </CardsProvider>\n    </I18nextProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import { Card } from 'interfaces/Card';\nimport { createContext, FC, useState, ReactNode, useCallback, useMemo, useEffect } from 'react';\nimport i18n from 'translate';\nimport grammarList from './grammarList';\n\nconst CardsContext = createContext({\n  // Cards\n  selectedCard: null,\n  finishedCards: [],\n  selectCard: (card: null | Card) => {},\n  addCardToFinish: (id: number, rating: number): void => {},\n  resetCards: () => {},\n  allCards: [],\n\n  // Drawer\n  openDrawer: () => {},\n  closeDrawer: () => {},\n  isDrawerOpened: false,\n\n  // Snackbar\n  isSnackBarOpened: false,\n  setSnackBarMessage: (message: string) => {},\n  snackMessage: null,\n  setSnackBarOpened: (value: boolean) => {},\n});\n\nexport default CardsContext;\n\nexport const CardsProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  const savedCards = useMemo(() => JSON.parse(localStorage.getItem('finishedCards')) || {}, []);\n  const savedLanguage = useMemo(() => {\n    if (localStorage.hasOwnProperty('language')) {\n      return localStorage.getItem('language');\n    }\n    return 'en';\n  }, []);\n\n  const [allCards, setAllCards] = useState<Card[]>(grammarList);\n  const [selectedCard, setSelectedCard] = useState<null | Card>(null);\n  const [finishedCards, setFinishedCards] = useState<any>(savedCards ?? {});\n  const [isDrawerOpened, setDrawerOpen] = useState<boolean>(false);\n  const [isSnackBarOpened, setSnackBarOpened] = useState(false);\n  const [snackMessage, setSnackMessage] = useState<null | string>(null);\n\n  useEffect(() => {\n    if (savedLanguage) i18n.changeLanguage(savedLanguage);\n  }, [savedLanguage]);\n\n  const openDrawer = useCallback(() => {\n    setDrawerOpen(true);\n  }, []);\n\n  const closeDrawer = useCallback(() => {\n    setDrawerOpen(false);\n  }, []);\n\n  const addCardToFinish = useCallback(\n    (id: number, rating: number) => {\n      setSelectedCard(null);\n      const finishedList = { ...finishedCards, [id]: rating };\n      localStorage.setItem('finishedCards', JSON.stringify(finishedList));\n      setFinishedCards(finishedList);\n      closeDrawer();\n    },\n    [closeDrawer, finishedCards]\n  );\n\n  const selectCard = useCallback(\n    (card: null | Card) => {\n      if (card) {\n        openDrawer();\n        setAllCards((prevState) => prevState.filter((el) => el.id !== card.id));\n      } else {\n        closeDrawer();\n      }\n      setSelectedCard(card);\n    },\n    [closeDrawer, openDrawer]\n  );\n\n  const resetCards = useCallback(() => {\n    setFinishedCards({});\n    localStorage.removeItem('finishedCards');\n    setAllCards(grammarList);\n  }, []);\n\n  const setSnackBarMessage = useCallback((message) => {\n    setSnackBarOpened(true);\n    setSnackMessage(message);\n  }, []);\n\n  return (\n    <CardsContext.Provider\n      value={{\n        // Cards\n        selectedCard,\n        finishedCards,\n\n        addCardToFinish,\n        resetCards,\n        allCards,\n        selectCard,\n        // Drawer\n        isDrawerOpened,\n        closeDrawer,\n        openDrawer,\n\n        // Snackbar\n        isSnackBarOpened,\n        setSnackBarOpened,\n        setSnackBarMessage,\n        snackMessage,\n      }}\n    >\n      {children}\n    </CardsContext.Provider>\n  );\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(initReactI18next)\n  // .use(LanguageDetector) need i18next-browser-languagedetector library\n  .init({\n    // we init with resources\n    resources: {\n      en: {\n        translations: {\n          friend: 'Friend',\n        },\n      },\n      ukr: {\n        translations: {\n          friend: 'Товариш',\n        },\n      },\n    },\n    fallbackLng: 'en',\n    debug: false,\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false, // we use content as keys\n    interpolation: {\n      escapeValue: false, // not needed for react!!\n      formatSeparator: ',',\n    },\n    react: {\n      wait: true,\n      useSuspense: false,\n    },\n  });\n\nexport default i18n;\n","import React, { useCallback, useState } from 'react';\nimport { Box, Container, MenuItem, Select, Typography } from '@mui/material';\nimport i18next from 'i18next';\n\nimport { useTranslation } from 'react-i18next';\n\nconst Header = () => {\n  const { i18n } = useTranslation();\n\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (event) => {\n    i18n.changeLanguage(event.target.value);\n    localStorage.setItem('language', event.target.value);\n  };\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  return (\n    <Container>\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h3\">Select a card</Typography>\n        <p>{i18next.t('friend')}</p>\n        <Select\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={i18n.language}\n          label=\"Age\"\n          onChange={handleChange}\n          style={{ minWidth: 85 }}\n        >\n          <MenuItem value=\"en\">EN</MenuItem>\n          <MenuItem value=\"ukr\">UKR</MenuItem>\n        </Select>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\n\ninterface Props {\n  open: boolean;\n  handleClose: () => void;\n  handleConfirm: () => void;\n  title: string;\n  confirm?: string;\n  cancel?: string;\n}\n\nconst DialogSmall: FC<Props> = (props) => {\n  const { open, handleClose, handleConfirm, title, confirm = 'Yes', cancel = 'Cancel' } = props;\n\n  return (\n    <Dialog open={open} keepMounted onClose={handleClose} aria-labelledby=\"alert-dialog-slide-title\">\n      <DialogTitle id=\"alert-dialog-slide-title\">{title}</DialogTitle>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\n          {cancel}\n        </Button>\n        <Button onClick={handleConfirm} color=\"secondary\" variant=\"contained\">\n          {confirm}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DialogSmall;\n","import { useCallback, useContext, useState } from 'react';\nimport SpeedDial from '@mui/material/SpeedDial';\nimport FlareIcon from '@mui/icons-material/Flare';\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\nimport FileCopyIcon from '@mui/icons-material/FileCopyOutlined';\nimport CardsContext from 'store/context';\n\nconst BasicSpeedDial = () => {\n  const { setSnackBarMessage } = useContext(CardsContext);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const toggleMenu = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  const actions = [\n    {\n      icon: <FileCopyIcon />,\n      name: 'Copy link to clipboard',\n      handleClick: () => {\n        // todo do I need it?\n        // e.stopPropagation();\n        navigator.clipboard.writeText(window.location.href);\n        setSnackBarMessage('Link copied');\n      },\n    },\n  ];\n\n  return (\n    <SpeedDial\n      ariaLabel=\"Tell about us!\"\n      open={isOpen}\n      onClick={toggleMenu}\n      sx={{ position: 'absolute', bottom: 16, right: 16 }}\n      icon={<FlareIcon />}\n    >\n      {actions.map((action) => (\n        <SpeedDialAction key={action.name} icon={action.icon} tooltipTitle={action.name} onClick={action.handleClick} />\n      ))}\n    </SpeedDial>\n  );\n};\nexport default BasicSpeedDial;\n","import { FC, useContext } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport CardsContext from 'store/context';\n\nconst Toast: FC = () => {\n  const { isSnackBarOpened, snackMessage, setSnackBarOpened } = useContext(CardsContext);\n\n  return (\n    <Snackbar\n      autoHideDuration={1500}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      open={isSnackBarOpened}\n      message={snackMessage}\n      key={Math.random()}\n      onClose={() => setSnackBarOpened(false)}\n    />\n  );\n};\n\nexport default Toast;\n","const grammarList = [\n  {\n    id: 1,\n    header: 'head1',\n    description: 'desc1',\n  },\n  {\n    id: 2,\n    header: 'head2',\n    description: 'desc2',\n  },\n  {\n    id: 3,\n    header: 'head3',\n    description: 'desc3',\n  },\n  {\n    id: 4,\n    header: 'head4',\n    description: 'desc4',\n  },\n  {\n    id: 5,\n    header: 'head5',\n    description: 'desc5',\n  },\n  {\n    id: 6,\n    header: 'head6',\n    description: 'desc6',\n  },\n];\n\nexport default grammarList;\n"],"sourceRoot":""}