{"version":3,"sources":["../node_modules/@mui/material/Drawer/drawerClasses.js","../node_modules/@mui/material/Drawer/Drawer.js","../node_modules/@mui/material/Slide/Slide.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/base/NoSsr/NoSsr.js","../node_modules/@mui/material/SwipeableDrawer/SwipeArea.js","../node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"names":["getDrawerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_excluded2","overridesResolver","props","styles","ownerState","root","variant","docked","modal","DrawerRoot","styled","Modal","name","zIndex","theme","drawer","DrawerDockedRoot","shouldForwardProp","rootShouldForwardProp","skipVariantsResolver","flex","DrawerPaper","Paper","paper","capitalize","anchor","_extends","overflowY","display","flexDirection","height","WebkitOverflowScrolling","position","top","outline","left","right","maxHeight","bottom","borderRight","palette","divider","borderBottom","borderLeft","borderTop","oppositeDirection","isHorizontal","indexOf","getAnchor","direction","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Drawer","React","inProps","ref","useThemeProps","anchorProp","BackdropProps","children","className","elevation","hideBackdrop","ModalProps","BackdropPropsProp","onClose","open","PaperProps","SlideProps","TransitionComponent","Slide","transitionDuration","_objectWithoutPropertiesLoose","other","useTheme","mounted","current","anchorInvariant","classes","slots","composeClasses","useUtilityClasses","_jsx","square","clsx","slidingDrawer","in","timeout","appear","setTranslateValue","node","containerProp","containerPropProp","transform","resolvedContainer","rect","getBoundingClientRect","containerRect","containerWindow","ownerWindow","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","width","innerHeight","getTranslateValue","style","webkitTransform","defaultEasing","easing","easeOut","sharp","defaultTimeout","addEndListener","container","easingProp","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","Transition","childrenRef","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","transition","handleEntered","handleExiting","handleExit","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","nodeRef","next","state","childProps","visibility","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","CssBaseline","_jsxs","GlobalStyles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","NoSsr","defer","fallback","mountedState","setMountedState","useEnhancedEffect","SwipeAreaRoot","skipSx","SwipeArea","claimedSwipeInstance","calculateCurrentX","touches","doc","offsetWidth","pageX","calculateCurrentY","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","SwipeableDrawer","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hysteresis","minFlingVelocity","onOpen","SwipeAreaProps","swipeAreaWidth","ModalPropsProp","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","translate","options","changeTransition","anchorRtl","rtlTranslateMultiplier","drawerStyle","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","nativeEvent","horizontal","changedTouches","ownerDocument","currentTarget","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","round","areNotAtStart","areNotAtEnd","computeHasNativeHandler","element","rootNode","parentElement","scrollWidth","scrollHeight","push","getDomTreeShapes","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","passive","pointerEvents"],"mappings":"4TACO,SAASA,EAAsBC,GACpC,OAAOC,YAAqB,YAAaD,GAErBE,YAAuB,YAAa,CAAC,OAAQ,SAAU,QAAS,kBAAmB,mBAAoB,iBAAkB,oBAAqB,wBAAyB,yBAA0B,uBAAwB,0BAA2B,UAA1Q,I,OCFMC,EAAY,CAAC,iBACbC,EAAa,CAAC,SAAU,gBAAiB,WAAY,YAAa,YAAa,eAAgB,aAAc,UAAW,OAAQ,aAAc,aAAc,sBAAuB,qBAAsB,WAiBzMC,EAAoB,SAACC,EAAOC,GAChC,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,MAA8B,cAAvBD,EAAWE,SAAkD,eAAvBF,EAAWE,UAA6BH,EAAOI,OAAQJ,EAAOK,QAkBtHC,EAAaC,YAAOC,IAAO,CAC/BC,KAAM,YACNhB,KAAM,OACNK,qBAHiBS,EAIhB,kBAEI,CACLG,OAHC,EACDC,MAEcD,OAAOE,WAEjBC,EAAmBN,YAAO,MAAO,CACrCO,kBAAmBC,IACnBN,KAAM,YACNhB,KAAM,SACNuB,sBAAsB,EACtBlB,qBALuBS,CAMtB,CACDU,KAAM,aAEFC,EAAcX,YAAOY,IAAO,CAChCV,KAAM,YACNhB,KAAM,QACNK,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOoB,MAAOpB,EAAO,cAAD,OAAeqB,YAAWpB,EAAWqB,UAAmC,cAAvBrB,EAAWE,SAA2BH,EAAO,oBAAD,OAAqBqB,YAAWpB,EAAWqB,aAPpJf,EASjB,gBACDI,EADC,EACDA,MACAV,EAFC,EAEDA,WAFC,OAGGsB,YAAS,CACbC,UAAW,OACXC,QAAS,OACTC,cAAe,SACfC,OAAQ,OACRV,KAAM,WACNP,OAAQC,EAAMD,OAAOE,OAErBgB,wBAAyB,QAEzBC,SAAU,QACVC,IAAK,EAILC,QAAS,GACc,SAAtB9B,EAAWqB,QAAqB,CACjCU,KAAM,GACiB,QAAtB/B,EAAWqB,QAAoB,CAChCQ,IAAK,EACLE,KAAM,EACNC,MAAO,EACPN,OAAQ,OACRO,UAAW,QACY,UAAtBjC,EAAWqB,QAAsB,CAClCW,MAAO,GACgB,WAAtBhC,EAAWqB,QAAuB,CACnCQ,IAAK,OACLE,KAAM,EACNG,OAAQ,EACRF,MAAO,EACPN,OAAQ,OACRO,UAAW,QACY,SAAtBjC,EAAWqB,QAA4C,cAAvBrB,EAAWE,SAA2B,CACvEiC,YAAa,aAAF,OAAezB,EAAM0B,QAAQC,UACjB,QAAtBrC,EAAWqB,QAA2C,cAAvBrB,EAAWE,SAA2B,CACtEoC,aAAc,aAAF,OAAe5B,EAAM0B,QAAQC,UAClB,UAAtBrC,EAAWqB,QAA6C,cAAvBrB,EAAWE,SAA2B,CACxEqC,WAAY,aAAF,OAAe7B,EAAM0B,QAAQC,UAChB,WAAtBrC,EAAWqB,QAA8C,cAAvBrB,EAAWE,SAA2B,CACzEsC,UAAW,aAAF,OAAe9B,EAAM0B,QAAQC,cAElCI,EAAoB,CACxBV,KAAM,QACNC,MAAO,OACPH,IAAK,OACLK,OAAQ,MAEH,SAASQ,EAAarB,GAC3B,OAA8C,IAAvC,CAAC,OAAQ,SAASsB,QAAQtB,GAE5B,SAASuB,EAAUlC,EAAOW,GAC/B,MAA2B,QAApBX,EAAMmC,WAAuBH,EAAarB,GAAUoB,EAAkBpB,GAAUA,EAEzF,IAAMyB,EAA4B,CAChCC,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eAOXC,EAAsBC,cAAiB,SAAgBC,EAASC,GACpE,IAAMzD,EAAQ0D,YAAc,CAC1B1D,MAAOwD,EACP9C,KAAM,cAGR,EAkBIV,EAjBFuB,OAAQoC,OADV,MACuB,OADvB,EAEEC,EAgBE5D,EAhBF4D,cACAC,EAeE7D,EAfF6D,SACAC,EAcE9D,EAdF8D,UAJF,EAkBI9D,EAbF+D,iBALF,MAKc,GALd,IAkBI/D,EAZFgE,oBANF,WAkBIhE,EAXFiE,WACiBC,GARnB,aASM,GATN,GAQIN,cAEFO,EAQEnE,EARFmE,QAVF,EAkBInE,EAPFoE,YAXF,WAkBIpE,EANFqE,kBAZF,MAYe,GAZf,EAaEC,EAKEtE,EALFsE,WAbF,EAkBItE,EAHFuE,2BAfF,MAewBC,IAfxB,IAkBIxE,EAFFyE,0BAhBF,MAgBuBzB,EAhBvB,IAkBIhD,EADFI,eAjBF,MAiBY,YAjBZ,EAmBM6D,EAAaS,YAA8B1E,EAAMiE,WAAYpE,GAC7D8E,EAAQD,YAA8B1E,EAAOF,GAE7Cc,EAAQgE,cAIRC,EAAUtB,UAAa,GAC7BA,aAAgB,WACdsB,EAAQC,SAAU,IACjB,IACH,IAAMC,EAAkBjC,EAAUlC,EAAO+C,GACnCpC,EAASoC,EAETzD,EAAasB,YAAS,GAAIxB,EAAO,CACrCuB,SACAwC,YACAK,OACAhE,WACCuE,GAEGK,EA1JkB,SAAA9E,GACxB,IACE8E,EAGE9E,EAHF8E,QACAzD,EAEErB,EAFFqB,OACAnB,EACEF,EADFE,QAEI6E,EAAQ,CACZ9E,KAAM,CAAC,QACPE,OAAQ,EAAc,cAAZD,GAAuC,eAAZA,IAA6B,UAClEE,MAAO,CAAC,SACRe,MAAO,CAAC,QAAD,qBAAwBC,YAAWC,IAAuB,cAAZnB,GAAA,2BAA+CkB,YAAWC,MAEjH,OAAO2D,YAAeD,EAAOxF,EAAuBuF,GA8IpCG,CAAkBjF,GAE5BW,EAAsBuE,cAAKjE,EAAaK,YAAS,CACrDuC,UAAuB,cAAZ3D,EAA0B2D,EAAY,EACjDsB,QAAQ,GACPhB,EAAY,CACbP,UAAWwB,YAAKN,EAAQ3D,MAAOgD,EAAWP,WAC1C5D,WAAYA,EACZ2D,SAAUA,KAGZ,GAAgB,cAAZzD,EACF,OAAoBgF,cAAKtE,EAAkBU,YAAS,CAClDsC,UAAWwB,YAAKN,EAAQ7E,KAAM6E,EAAQ3E,OAAQyD,GAC9C5D,WAAYA,EACZuD,IAAKA,GACJkB,EAAO,CACRd,SAAUhD,KAId,IAAM0E,GAA6BH,cAAKb,EAAqB/C,YAAS,CACpEgE,GAAIpB,EACJrB,UAAWJ,EAAkBoC,GAC7BU,QAAShB,EACTiB,OAAQb,EAAQC,SACfR,EAAY,CACbT,SAAUhD,KAGZ,MAAgB,eAAZT,EACkBgF,cAAKtE,EAAkBU,YAAS,CAClDsC,UAAWwB,YAAKN,EAAQ7E,KAAM6E,EAAQ3E,OAAQyD,GAC9C5D,WAAYA,EACZuD,IAAKA,GACJkB,EAAO,CACRd,SAAU0B,MAKMH,cAAK7E,EAAYiB,YAAS,CAC5CoC,cAAepC,YAAS,GAAIoC,EAAeM,EAAmB,CAC5DO,uBAEFX,UAAWwB,YAAKN,EAAQ7E,KAAM6E,EAAQ1E,MAAOwD,GAC7CM,KAAMA,EACNlE,WAAYA,EACZiE,QAASA,EACTH,aAAcA,EACdP,IAAKA,GACJkB,EAAOV,EAAY,CACpBJ,SAAU0B,SAqGCjC,O,iCC9Uf,iGAEMzD,EAAY,CAAC,iBAAkB,SAAU,WAAY,YAAa,YAAa,SAAU,KAAM,UAAW,YAAa,aAAc,SAAU,WAAY,YAAa,QAAS,UAAW,uBAyE3L,SAAS8F,EAAkB5C,EAAW6C,EAAMC,GACjD,IALwBC,EAMlBC,EA5DR,SAA2BhD,EAAW6C,EAAMI,GAC1C,IAGID,EAHEE,EAAOL,EAAKM,wBACZC,EAAgBH,GAAqBA,EAAkBE,wBACvDE,EAAkBC,YAAYT,GAGpC,GAAIA,EAAKU,cACPP,EAAYH,EAAKU,kBACZ,CACL,IAAMC,EAAgBH,EAAgBI,iBAAiBZ,GACvDG,EAAYQ,EAAcE,iBAAiB,sBAAwBF,EAAcE,iBAAiB,aAGpG,IAAIC,EAAU,EACVC,EAAU,EAEd,GAAIZ,GAA2B,SAAdA,GAA6C,kBAAdA,EAAwB,CACtE,IAAMa,EAAkBb,EAAUc,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KACpEH,EAAUI,SAASF,EAAgB,GAAI,IACvCD,EAAUG,SAASF,EAAgB,GAAI,IAGzC,MAAkB,SAAd7D,EAEA,qBADEoD,EACmBA,EAAcjE,MAAQwE,EAAUT,EAAKhE,KAGvCmE,EAAgBW,WAAaL,EAAUT,EAAKhE,KAH/D,OAMc,UAAdc,EAEA,sBADEoD,EACoBF,EAAK/D,MAAQiE,EAAclE,KAAOyE,EAGpCT,EAAKhE,KAAOgE,EAAKe,MAAQN,EAH7C,OAMc,OAAd3D,EAEA,qBADEoD,EACmBA,EAAc/D,OAASuE,EAAUV,EAAKlE,IAGxCqE,EAAgBa,YAAcN,EAAUV,EAAKlE,IAHhE,OAQF,sBADEoE,EACoBF,EAAKlE,IAAMoE,EAAcpE,IAAMkE,EAAKrE,OAAS+E,EAG/CV,EAAKlE,IAAMkE,EAAKrE,OAAS+E,EAH7C,OAYgBO,CAAkBnE,EAAW6C,EALX,oBADZE,EAKmBD,GAJMC,IAAsBA,GAOnEC,IACFH,EAAKuB,MAAMC,gBAAkBrB,EAC7BH,EAAKuB,MAAMpB,UAAYA,GAG3B,IAAMsB,EAAgB,CACpBpE,MAAOqE,IAAOC,QACdnE,KAAMkE,IAAOE,OAETC,EAAiB,CACrBxE,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eAOXmB,EAAqBjB,cAAiB,SAAevD,EAAOyD,GAChE,IACEiE,EAiBE1H,EAjBF0H,eADF,EAkBI1H,EAhBF0F,cAFF,SAGE7B,EAeE7D,EAfF6D,SACWgC,EAcT7F,EAdF2H,UAJF,EAkBI3H,EAbF+C,iBALF,MAKc,OALd,IAkBI/C,EAZFsH,OAAQM,OANV,MAMuBP,EANvB,EAOMQ,EAWF7H,EAXFwF,GACAsC,EAUE9H,EAVF8H,QACAC,EASE/H,EATF+H,UACAC,EAQEhI,EARFgI,WACAC,EAOEjI,EAPFiI,OACAC,EAMElI,EANFkI,SACAC,EAKEnI,EALFmI,UACAhB,EAIEnH,EAJFmH,MAdF,EAkBInH,EAHFyF,eAfF,MAeYgC,EAfZ,IAkBIzH,EADFuE,2BAjBF,MAiBwB6D,IAjBxB,EAmBMzD,EAAQD,YAA8B1E,EAAOH,GAE7Ce,EAAQgE,cACRyD,EAAc9E,SAAa,MAC3B+E,EAAwBC,YAAW1E,EAASJ,IAAK4E,GACjDG,EAAYD,YAAWD,EAAuB7E,GAE9CgF,EAA+B,SAAAC,GAAQ,OAAI,SAAAC,GAC3CD,SAEkBE,IAAhBD,EACFD,EAASL,EAAYvD,SAErB4D,EAASL,EAAYvD,QAAS6D,MAK9BE,EAAcJ,GAA6B,SAAC7C,EAAM+C,GACtDhD,EAAkB5C,EAAW6C,EAAMC,GACnCiD,YAAOlD,GAEHkC,GACFA,EAAQlC,EAAM+C,MAGZI,EAAiBN,GAA6B,SAAC7C,EAAM+C,GACzD,IAAMK,EAAkBC,YAAmB,CACzCxD,UACA0B,QACAG,OAAQM,GACP,CACDsB,KAAM,UAERtD,EAAKuB,MAAMgC,iBAAmBvI,EAAMwI,YAAYC,OAAO,oBAAqB7H,YAAS,GAAIwH,IACzFpD,EAAKuB,MAAMmC,WAAa1I,EAAMwI,YAAYC,OAAO,YAAa7H,YAAS,GAAIwH,IAC3EpD,EAAKuB,MAAMC,gBAAkB,OAC7BxB,EAAKuB,MAAMpB,UAAY,OAEnBiC,GACFA,EAAWpC,EAAM+C,MAGfY,EAAgBd,EAA6BV,GAC7CyB,EAAgBf,EAA6BN,GAC7CsB,EAAahB,GAA6B,SAAA7C,GAC9C,IAAMoD,EAAkBC,YAAmB,CACzCxD,UACA0B,QACAG,OAAQM,GACP,CACDsB,KAAM,SAERtD,EAAKuB,MAAMgC,iBAAmBvI,EAAMwI,YAAYC,OAAO,oBAAqBL,GAC5EpD,EAAKuB,MAAMmC,WAAa1I,EAAMwI,YAAYC,OAAO,YAAaL,GAC9DrD,EAAkB5C,EAAW6C,EAAMC,GAE/BoC,GACFA,EAAOrC,MAGL8D,EAAejB,GAA6B,SAAA7C,GAEhDA,EAAKuB,MAAMgC,iBAAmB,GAC9BvD,EAAKuB,MAAMmC,WAAa,GAEpBpB,GACFA,EAAStC,MAWP+D,EAAiBpG,eAAkB,WACnC8E,EAAYvD,SACda,EAAkB5C,EAAWsF,EAAYvD,QAASe,KAEnD,CAAC9C,EAAW8C,IA0Bf,OAzBAtC,aAAgB,WAEd,IAAIsE,GAAwB,SAAd9E,GAAsC,UAAdA,EAAtC,CAIA,IAAM6G,EAAeC,aAAS,WACxBxB,EAAYvD,SACda,EAAkB5C,EAAWsF,EAAYvD,QAASe,MAGhDO,EAAkBC,YAAYgC,EAAYvD,SAEhD,OADAsB,EAAgB0D,iBAAiB,SAAUF,GACpC,WACLA,EAAaG,QACb3D,EAAgB4D,oBAAoB,SAAUJ,OAE/C,CAAC7G,EAAW8E,EAAQhC,IACvBtC,aAAgB,WACTsE,GAGH8B,MAED,CAAC9B,EAAQ8B,IACQvE,cAAKb,EAAqB/C,YAAS,CACrDyI,QAAS5B,EACTP,QAASe,EACTd,UAAWwB,EACXvB,WAAYe,EACZd,OAAQwB,EACRvB,SAAUwB,EACVvB,UAAWqB,EACX9B,eA7C2B,SAAAwC,GACvBxC,GAEFA,EAAeW,EAAYvD,QAASoF,IA2CtCxE,OAAQA,EACRF,GAAIqC,EACJpC,QAASA,GACRd,EAAO,CACRd,SAAU,SAACsG,EAAOC,GAChB,OAAoB7G,eAAmBM,EAAUrC,YAAS,CACxDiC,IAAK+E,EACLrB,MAAO3F,YAAS,CACd6I,WAAsB,WAAVF,GAAuBtC,OAAoBe,EAAX,UAC3CzB,EAAOtD,EAAS7D,MAAMmH,QACxBiD,WA8HM5F,O,iCClXf,kDAOa8F,EAAO,SAAC1J,EAAO2J,GAAR,OAA8B/I,YAAS,CACzDgJ,oBAAqB,cAErBC,oBAAqB,YAIrBC,UAAW,aAEXC,qBAAsB,QACrBJ,GAAqB,CACtBK,YAAahK,EAAM0B,QAAQ4G,QAEhB2B,EAAO,SAAAjK,GAAK,OAAIY,YAAS,CACpCsJ,MAAOlK,EAAM0B,QAAQyI,KAAKC,SACzBpK,EAAMqK,WAAWC,MAAO,CACzBC,gBAAiBvK,EAAM0B,QAAQ8I,WAAWC,QAC1C,eAAgB,CAEdF,gBAAiBvK,EAAM0B,QAAQgJ,OAAOC,UAyE3BC,IArCf,SAAqBhI,GACnB,IAAMxD,EAAQ0D,YAAc,CAC1B1D,MAAOwD,EACP9C,KAAM,mBAGNmD,EAEE7D,EAFF6D,SADF,EAGI7D,EADFuK,yBAFF,SAIA,OAAoBkB,eAAMlI,WAAgB,CACxCM,SAAU,CAAcuB,cAAKsG,IAAc,CACzCzL,OAAQ,SAAAW,GAAK,OA5CG,SAACA,GAAqC,IACtD+K,EAAmBC,EAEnBC,EAAgB,CAClBvB,KAAMA,EAAK1J,EAJ6C,yDAKxD,yBAA0B,CACxB8J,UAAW,WAEb,YAAa,CACXoB,WAAYlL,EAAMqK,WAAWc,gBAE/BlB,KAAMrJ,YAAS,CACbwK,OAAQ,GACPnB,EAAKjK,GAAQ,CAGd,cAAe,CACbuK,gBAAiBvK,EAAM0B,QAAQ8I,WAAWC,YAI1CY,EAA2D,OAAzCN,EAAoB/K,EAAMsL,aAA6F,OAA7DN,EAAwBD,EAAkBQ,qBAApD,EAAuFP,EAAsBQ,eAMrL,OAJIH,IACFJ,EAAgB,CAACA,EAAeI,IAG3BJ,EAiBc5L,CAAOW,EAAO2J,MAC7B1G,O,kGCJOwI,MAvDf,SAAerM,GACb,IACE6D,EAGE7D,EAHF6D,SADF,EAII7D,EAFFsM,aAFF,WAIItM,EADFuM,gBAHF,MAGa,KAHb,EAKA,EAAwChJ,YAAe,GAAvD,mBAAOiJ,EAAP,KAAqBC,EAArB,KAYA,OAXAC,aAAkB,WACXJ,GACHG,GAAgB,KAEjB,CAACH,IACJ/I,aAAgB,WACV+I,GACFG,GAAgB,KAEjB,CAACH,IAEgBlH,cAAK7B,WAAgB,CACvCM,SAAU2I,EAAe3I,EAAW0I,K,6FChClC1M,EAAY,CAAC,SAAU,UAAW,YAAa,QAAS,SAQxD8M,EAAgBnM,YAAO,MAAO,CAClCoM,QAAQ,GADYpM,EAEnB,gBACDI,EADC,EACDA,MACAV,EAFC,EAEDA,WAFC,OAGGsB,YAAS,CACbM,SAAU,QACVC,IAAK,EACLE,KAAM,EACNG,OAAQ,EACRzB,OAAQC,EAAMD,OAAOE,OAAS,GACP,SAAtBX,EAAWqB,QAAqB,CACjCW,MAAO,QACgB,UAAtBhC,EAAWqB,QAAsB,CAClCU,KAAM,OACNC,MAAO,GACgB,QAAtBhC,EAAWqB,QAAoB,CAChCa,OAAQ,OACRF,MAAO,GACgB,WAAtBhC,EAAWqB,QAAuB,CACnCQ,IAAK,OACLK,OAAQ,EACRF,MAAO,OAqDM2K,EA/CgBtJ,cAAiB,SAAmBvD,EAAOyD,GACxE,IACElC,EAKEvB,EALFuB,OADF,EAMIvB,EAJFgF,eAFF,MAEY,GAFZ,EAGElB,EAGE9D,EAHF8D,UACAkD,EAEEhH,EAFFgH,MACAG,EACEnH,EADFmH,MAEIxC,EAAQD,YAA8B1E,EAAOH,GAE7CK,EAAaF,EACnB,OAAoBoF,cAAKuH,EAAenL,YAAS,CAC/CsC,UAAWwB,YAAK,wBAAyBN,EAAQ7E,KAAM6E,EAAQ,SAAD,OAAU1D,YAAWC,KAAYuC,GAC/FL,IAAKA,EACL0D,MAAO3F,YAAS,eACboB,YAAarB,GAAU,QAAU,SAAWyF,GAC5CG,GACHjH,WAAYA,GACXyE,OCtDC9E,EAAY,CAAC,iBACbC,EAAa,CAAC,SAAU,4BAA6B,mBAAoB,qBAAsB,eAAgB,aAAc,mBAAoB,aAAc,UAAW,SAAU,OAAQ,aAAc,iBAAkB,iBAAkB,qBAAsB,WA2BtQgN,EAAuB,KAM3B,SAASC,EAAkBxL,EAAQyL,EAASC,GAC1C,MAAkB,UAAX1L,EAAqB0L,EAAIpC,KAAKqC,YAAcF,EAAQ,GAAGG,MAAQH,EAAQ,GAAGG,MAGnF,SAASC,EAAkB7L,EAAQyL,EAAS5G,GAC1C,MAAkB,WAAX7E,EAAsB6E,EAAgBa,YAAc+F,EAAQ,GAAGK,QAAUL,EAAQ,GAAGK,QAG7F,SAASC,EAAgBC,EAAiBC,GACxC,OAAOD,EAAkBC,EAAcC,YAAcD,EAAcE,aAGrE,SAASC,EAAaC,EAAkBC,EAAezJ,EAAM0J,GAC3D,OAAOC,KAAKC,IAAID,KAAKE,IAAI7J,EAAOyJ,EAAgBD,EAAmBE,EAAeD,EAAgBD,EAAkB,GAAIE,GA6E1H,IAAMI,EAA2B,qBAAdC,WAA6B,mBAAmBC,KAAKD,UAAUE,WAC5EC,EAA4B,CAChCrL,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eAEXkL,EAA+BhL,cAAiB,SAAyBC,EAASC,GACtF,IAAMzD,EAAQ0D,YAAc,CAC1BhD,KAAM,qBACNV,MAAOwD,IAEH5C,EAAQgE,cAEd,EAmBI5E,EAlBFuB,cADF,MACW,OADX,IAmBIvB,EAjBFwO,iCAFF,WAmBIxO,EAhBFyO,wBAHF,WAmBIzO,EAfF0O,0BAJF,MAIuBR,EAJvB,EAKElK,EAcEhE,EAdFgE,aALF,EAmBIhE,EAbF2O,kBANF,MAMe,IANf,IAmBI3O,EAZF4O,wBAPF,MAOqB,IAPrB,IAmBI5O,EAXFiE,WACEL,GATJ,aAUM,GAVN,GASIA,cAEFO,EAQEnE,EARFmE,QACA0K,EAOE7O,EAPF6O,OACAzK,EAMEpE,EANFoE,KAbF,EAmBIpE,EALFqE,kBAdF,MAce,GAdf,EAeEyK,EAIE9O,EAJF8O,eAfF,EAmBI9O,EAHF+O,sBAhBF,MAgBmB,GAhBnB,IAmBI/O,EAFFyE,0BAjBF,MAiBuB6J,EAjBvB,IAmBItO,EADFI,gBAlBF,MAkBY,YAlBZ,EAoBM4O,GAAiBtK,YAA8B1E,EAAMiE,WAAYpE,GACjE8E,GAAQD,YAA8B1E,EAAOF,GAEnD,GAAwCyD,YAAe,GAAvD,qBAAO0L,GAAP,MAAqBC,GAArB,MACMC,GAAgB5L,SAAa,CACjC6L,UAAW,OAEPC,GAAe9L,WACf+L,GAAc/L,WACdgM,GAAWhM,WACXiM,GAAgBjM,UAAa,GAE7BkM,GAAwBlM,WAE9BmJ,aAAkB,WAChB+C,GAAsB3K,QAAU,OAC/B,CAACV,IACJ,IAAMsL,GAAcnM,eAAkB,SAACoM,GAA4B,IAAjBC,EAAiB,uDAAP,GAC1D,EAGIA,EAFF1G,YADF,MACS,KADT,IAGI0G,EADFC,wBAFF,SAIMC,EAAYhN,YAAUlC,EAAOW,GAC7BwO,GAAqE,IAA5C,CAAC,QAAS,UAAUlN,QAAQiN,GAAoB,GAAK,EAC9EvC,EAAkB3K,YAAarB,GAC/BwE,EAAYwH,EAAkB,aAAH,OAAgBwC,EAAyBJ,EAAzC,iCAA6EI,EAAyBJ,EAAtG,OAC3BK,EAAcT,GAASzK,QAAQqC,MACrC6I,EAAY5I,gBAAkBrB,EAC9BiK,EAAYjK,UAAYA,EACxB,IAAIuD,EAAa,GAiBjB,GAfIJ,IACFI,EAAa1I,EAAMwI,YAAYC,OAAO,MAAOJ,YAAmB,CAC9D3B,YAAQsB,EACRzB,WAAOyB,EACPnD,QAAShB,GACR,CACDyE,WAIA2G,IACFG,EAAY7G,iBAAmBG,EAC/B0G,EAAY1G,WAAaA,IAGtBkF,IAA8BxK,EAAc,CAC/C,IAAMiM,EAAgBX,GAAYxK,QAAQqC,MAC1C8I,EAAcC,QAAU,EAAIP,EAAYrC,EAAgBC,EAAiBgC,GAASzK,SAE9E+K,IACFI,EAAc9G,iBAAmBG,EACjC2G,EAAc3G,WAAaA,MAG9B,CAAC/H,EAAQiN,EAA2BxK,EAAcpD,EAAO6D,IACtD0L,GAAqBC,aAAiB,SAAAC,GAC1C,GAAKb,GAAc1K,QAQnB,GAJAgI,EAAuB,KACvB0C,GAAc1K,SAAU,EACxBoK,IAAgB,GAEXC,GAAcrK,QAAQsK,UAA3B,CAKAD,GAAcrK,QAAQsK,UAAY,KAClC,IAEItK,EAFEgL,EAAYhN,YAAUlC,EAAOW,GAC7B+O,EAAa1N,YAAarB,GAI9BuD,EADEwL,EACQvD,EAAkB+C,EAAWO,EAAYE,eAAgBC,YAAcH,EAAYI,gBAEnFrD,EAAkB0C,EAAWO,EAAYE,eAAgBlK,YAAYgK,EAAYI,gBAG7F,IAAM5C,EAAgByC,EAAanB,GAAcrK,QAAQ4L,OAASvB,GAAcrK,QAAQ6L,OAClF7C,EAAeR,EAAgBgD,EAAYf,GAASzK,SACpD8I,EAAmBD,EAAa7I,EAAS+I,EAAezJ,EAAM0J,GAC9D8C,EAAiBhD,EAAmBE,EAEtCC,KAAK8C,IAAI1B,GAAcrK,QAAQgM,UAAYlC,IAE7Ca,GAAsB3K,QAAyF,IAA/EiJ,KAAK8C,KAAK/C,EAAeF,GAAoBuB,GAAcrK,QAAQgM,WAGjG1M,EACE+K,GAAcrK,QAAQgM,SAAWlC,GAAoBgC,EAAiBjC,EACxExK,IAGAuL,GAAY,EAAG,CACbxG,KAAM,SAORiG,GAAcrK,QAAQgM,UAAYlC,GAAoB,EAAIgC,EAAiBjC,EAC7EE,IAGAa,GAAYpC,EAAgBgD,EAAYf,GAASzK,SAAU,CACzDoE,KAAM,eA3CRiG,GAAcrK,QAAQsK,UAAY,QA+ChC2B,GAAsBX,aAAiB,SAAAC,GAE3C,GAAKd,GAASzK,SAAY0K,GAAc1K,UAKX,OAAzBgI,GAAiCA,IAAyBqC,GAAcrK,SAA5E,CAIA,IAAMgL,EAAYhN,YAAUlC,EAAOW,GAC7BgM,EAAkB3K,YAAarB,GAC/ByP,EAAWjE,EAAkB+C,EAAWO,EAAYrD,QAASwD,YAAcH,EAAYI,gBACvFQ,EAAW7D,EAAkB0C,EAAWO,EAAYrD,QAAS3G,YAAYgK,EAAYI,gBAE3F,GAAIrM,GAAQmL,GAASzK,QAAQoM,SAASb,EAAYc,SAAoC,OAAzBrE,EAA+B,CAC1F,IACMsE,EA7MZ,YAKG,IAJDC,EAIC,EAJDA,cACAC,EAGC,EAHDA,MACAxM,EAEC,EAFDA,QACAvD,EACC,EADDA,OAGMgQ,EACY,CACdC,EAAG,aACHC,EAAG,aAHDF,EAKU,CACZC,EAAG,cACHC,EAAG,gBAPDF,EASU,CACZC,EAAG,cACHC,EAAG,gBAGP,OAAOJ,EAAcK,MAAK,SAAAC,GAExB,IAAIC,EAAe9M,GAAWwM,EAEf,QAAX/P,GAA+B,SAAXA,IACtBqQ,GAAgBA,GAGlB,IAAMC,EAAkB,SAAXtQ,GAAgC,UAAXA,EAAqB,IAAM,IACvDuQ,EAAiB/D,KAAKgE,MAAMJ,EAAMJ,EAA8BM,KAChEG,EAAgBF,EAAiB,EACjCG,EAAcH,EAAiBH,EAAMJ,EAA4BM,IAASF,EAAMJ,EAA4BM,IAElH,SAAID,GAAgBK,IAAgBL,GAAgBI,MA2KzBE,CAAwB,CAC/Cb,cAzOR,SAA0Bc,EAASC,GAIjC,IAFA,IAAMf,EAAgB,GAEfc,GAAWA,IAAYC,EAASC,eAAe,CACpD,IAAMlL,EAAQd,YAAY+L,GAAU5L,iBAAiB2L,GAGd,aAAvChL,EAAMV,iBAAiB,aACkB,WAAzCU,EAAMV,iBAAiB,gBACZ0L,EAAQ1E,YAAc,GAAK0E,EAAQG,YAAcH,EAAQ1E,aAAe0E,EAAQzE,aAAe,GAAKyE,EAAQI,aAAeJ,EAAQzE,eAG5I2D,EAAcmB,KAAKL,GAGrBA,EAAUA,EAAQE,cAGpB,OAAOhB,EAoNmBoB,CAAiBpC,EAAYc,OAAQ5B,GAASzK,SAGlEwM,MAAO/D,EAAkB4B,GAAcrK,QAAQ4L,OAASvB,GAAcrK,QAAQ6L,OAC9E7L,QAASyI,EAAkByD,EAAWC,EACtC1P,WAGF,GAAI6P,EAEF,YADAtE,GAAuB,GAIzBA,EAAuBqC,GAAcrK,QAIvC,GAAuC,MAAnCqK,GAAcrK,QAAQsK,UAAmB,CAC3C,IAAMsD,EAAK3E,KAAK8C,IAAIG,EAAW7B,GAAcrK,QAAQ4L,QAC/CiC,EAAK5E,KAAK8C,IAAII,EAAW9B,GAAcrK,QAAQ6L,QAC/CiC,EAAoBrF,EAAkBmF,EAAKC,GAAMD,EA9R/B,EA8R4DC,EAAKD,GAAMC,EA9RvE,EAoSxB,GAJIC,GAAqBvC,EAAYwC,YACnCxC,EAAYyC,kBAGY,IAAtBF,IAA+BrF,EAAkBoF,EApS7B,EAoS0DD,EApS1D,GAoSuF,CAG7G,GAFAvD,GAAcrK,QAAQsK,UAAYwD,GAE7BA,EAEH,YADAzC,GAAmBE,GAKrBlB,GAAcrK,QAAQ4L,OAASM,EAC/B7B,GAAcrK,QAAQ6L,OAASM,EAE1BxC,GAAqBrK,IACpBmJ,EACF4B,GAAcrK,QAAQ4L,QA/SN,GAiThBvB,GAAcrK,QAAQ6L,QAjTN,KAuTxB,GAAKxB,GAAcrK,QAAQsK,UAA3B,CAIA,IAAMtB,EAAeR,EAAgBC,EAAiBgC,GAASzK,SAC3D+I,EAAgBN,EAAkB4B,GAAcrK,QAAQ4L,OAASvB,GAAcrK,QAAQ6L,OAEvFvM,IAAS+K,GAAcrK,QAAQiO,WACjClF,EAAgBE,KAAKC,IAAIH,EAAeC,IAG1C,IAAM6B,EAAYhC,EAAaJ,EAAkByD,EAAWC,EAAUpD,EAAezJ,EAAM0J,GAE3F,GAAI1J,EACF,GAAK+K,GAAcrK,QAAQiO,SAUF,IAAdpD,IACTR,GAAcrK,QAAQ4L,OAASM,EAC/B7B,GAAcrK,QAAQ6L,OAASM,OAZI,CAGnC,KAFiB1D,EAAkByD,EAAWlD,EAAemD,EAAWnD,GAOtE,OAJAqB,GAAcrK,QAAQiO,UAAW,EACjC5D,GAAcrK,QAAQ4L,OAASM,EAC/B7B,GAAcrK,QAAQ6L,OAASM,EAUO,OAAxC9B,GAAcrK,QAAQkO,gBACxB7D,GAAcrK,QAAQkO,cAAgBrD,EACtCR,GAAcrK,QAAQmO,SAAWC,YAAYC,MAAQ,GAGvD,IAAMrC,GAAYnB,EAAYR,GAAcrK,QAAQkO,gBAAkBE,YAAYC,MAAQhE,GAAcrK,QAAQmO,UAAY,IAE5H9D,GAAcrK,QAAQgM,SAA4C,GAAjC3B,GAAcrK,QAAQgM,SAA4B,GAAXA,EACxE3B,GAAcrK,QAAQkO,cAAgBrD,EACtCR,GAAcrK,QAAQmO,SAAWC,YAAYC,MAEzC9C,EAAYwC,YACdxC,EAAYyC,iBAGdpD,GAAYC,QAERyD,GAAuBhD,aAAiB,SAAAC,GAG5C,IAAIA,EAAYgD,mBAKZhD,EAAYiD,uBAKZlP,IAASJ,GAAiBsL,GAAYxK,QAAQoM,SAASb,EAAYc,SAAa5B,GAASzK,QAAQoM,SAASb,EAAYc,SAA1H,CAIA,IAAMrB,EAAYhN,YAAUlC,EAAOW,GAC7BgM,EAAkB3K,YAAarB,GAC/ByP,EAAWjE,EAAkB+C,EAAWO,EAAYrD,QAASwD,YAAcH,EAAYI,gBACvFQ,EAAW7D,EAAkB0C,EAAWO,EAAYrD,QAAS3G,YAAYgK,EAAYI,gBAE3F,IAAKrM,EAAM,CACT,GAAIsK,GAAsB2B,EAAYc,SAAW9B,GAAavK,QAC5D,OAGF,GAAIyI,GACF,GAAIyD,EAAWjC,EACb,YAEG,GAAIkC,EAAWlC,EACpB,OAIJsB,EAAYiD,qBAAsB,EAClCxG,EAAuB,KACvBqC,GAAcrK,QAAQ4L,OAASM,EAC/B7B,GAAcrK,QAAQ6L,OAASM,EAC/B/B,IAAgB,IAEX9K,GAAQmL,GAASzK,SAEpB4K,GAAYpC,EAAgBC,EAAiBgC,GAASzK,UAAY2J,EAAmB,IAlZ/D,IAkZ2F,CAC/GoB,kBAAkB,IAItBV,GAAcrK,QAAQgM,SAAW,EACjC3B,GAAcrK,QAAQmO,SAAW,KACjC9D,GAAcrK,QAAQkO,cAAgB,KACtC7D,GAAcrK,QAAQiO,UAAW,EACjCvD,GAAc1K,SAAU,MAmC1B,OAjCAvB,aAAgB,WACd,GAAgB,cAAZnD,GAAyB,CAC3B,IAAM6M,EAAMuD,YAAcjB,GAASzK,SASnC,OARAmI,EAAInD,iBAAiB,aAAcsJ,IAInCnG,EAAInD,iBAAiB,YAAaiH,GAAqB,CACrDwC,SAAUnP,IAEZ6I,EAAInD,iBAAiB,WAAYqG,IAC1B,WACLlD,EAAIjD,oBAAoB,aAAcoJ,IACtCnG,EAAIjD,oBAAoB,YAAa+G,GAAqB,CACxDwC,SAAUnP,IAEZ6I,EAAIjD,oBAAoB,WAAYmG,QAKvC,CAAC/P,GAASgE,EAAMgP,GAAsBrC,GAAqBZ,KAC9D5M,aAAgB,kBAAM,WAEhBuJ,IAAyBqC,GAAcrK,UACzCgI,EAAuB,SAExB,IACHvJ,aAAgB,WACTa,GACH8K,IAAgB,KAEjB,CAAC9K,IACgBqH,eAAMlI,WAAgB,CACxCM,SAAU,CAAcuB,cAAK9B,IAAQ9B,YAAS,CAC5C4C,OAAkB,cAAZhE,KAA2B6O,KAAsB7K,EACvDhE,QAASA,GACT6D,WAAYzC,YAAS,CACnBoC,cAAepC,YAAS,GAAIoC,EAAe,CACzCH,IAAK6L,MAENN,IACHhL,aAAcA,EACdK,WAAY7C,YAAS,GAAI6C,EAAY,CACnC8C,MAAO3F,YAAS,CACdgS,cAA2B,cAAZpT,IAA4BgE,EAAgB,GAAT,QACjDC,EAAW8C,OACd1D,IAAK8L,KAEPhO,OAAQA,EACRkD,mBAAoBgL,GAAsB3K,SAAWL,EACrDN,QAASA,EACTV,IAAKA,GACJkB,MAAU+J,GAAkC,cAAZtO,IAAwCgF,cAAKiH,EAAO,CACrFxI,SAAuBuB,cAAKyH,EAAWrL,YAAS,CAC9CD,OAAQA,EACRkC,IAAK4L,GACLrI,MAAO+H,GACND,YAmIMP","file":"static/js/3.5280804a.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDrawerUtilityClass(slot) {\n  return generateUtilityClass('MuiDrawer', slot);\n}\nconst drawerClasses = generateUtilityClasses('MuiDrawer', ['root', 'docked', 'paper', 'paperAnchorLeft', 'paperAnchorRight', 'paperAnchorTop', 'paperAnchorBottom', 'paperAnchorDockedLeft', 'paperAnchorDockedRight', 'paperAnchorDockedTop', 'paperAnchorDockedBottom', 'modal']);\nexport default drawerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"BackdropProps\", \"children\", \"className\", \"elevation\", \"hideBackdrop\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Modal from '../Modal';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/createTransitions';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getDrawerUtilityClass } from './drawerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, (ownerState.variant === 'permanent' || ownerState.variant === 'persistent') && styles.docked, styles.modal];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchor,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    docked: [(variant === 'permanent' || variant === 'persistent') && 'docked'],\n    modal: ['modal'],\n    paper: ['paper', `paperAnchor${capitalize(anchor)}`, variant !== 'temporary' && `paperAnchorDocked${capitalize(anchor)}`]\n  };\n  return composeClasses(slots, getDrawerUtilityClass, classes);\n};\n\nconst DrawerRoot = styled(Modal, {\n  name: 'MuiDrawer',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.drawer\n}));\nconst DrawerDockedRoot = styled('div', {\n  shouldForwardProp: rootShouldForwardProp,\n  name: 'MuiDrawer',\n  slot: 'Docked',\n  skipVariantsResolver: false,\n  overridesResolver\n})({\n  flex: '0 0 auto'\n});\nconst DrawerPaper = styled(Paper, {\n  name: 'MuiDrawer',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`paperAnchor${capitalize(ownerState.anchor)}`], ownerState.variant !== 'temporary' && styles[`paperAnchorDocked${capitalize(ownerState.anchor)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: '1 0 auto',\n  zIndex: theme.zIndex.drawer,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  // temporary style\n  position: 'fixed',\n  top: 0,\n  // We disable the focus ring for mouse, touch and keyboard users.\n  // At some point, it would be better to keep it for keyboard users.\n  // :focus-ring CSS pseudo-class will help.\n  outline: 0\n}, ownerState.anchor === 'left' && {\n  left: 0\n}, ownerState.anchor === 'top' && {\n  top: 0,\n  left: 0,\n  right: 0,\n  height: 'auto',\n  maxHeight: '100%'\n}, ownerState.anchor === 'right' && {\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: 'auto',\n  maxHeight: '100%'\n}, ownerState.anchor === 'left' && ownerState.variant !== 'temporary' && {\n  borderRight: `1px solid ${theme.palette.divider}`\n}, ownerState.anchor === 'top' && ownerState.variant !== 'temporary' && {\n  borderBottom: `1px solid ${theme.palette.divider}`\n}, ownerState.anchor === 'right' && ownerState.variant !== 'temporary' && {\n  borderLeft: `1px solid ${theme.palette.divider}`\n}, ownerState.anchor === 'bottom' && ownerState.variant !== 'temporary' && {\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nconst Drawer = /*#__PURE__*/React.forwardRef(function Drawer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDrawer'\n  });\n\n  const {\n    anchor: anchorProp = 'left',\n    BackdropProps,\n    children,\n    className,\n    elevation = 16,\n    hideBackdrop = false,\n    ModalProps: {\n      BackdropProps: BackdropPropsProp\n    } = {},\n    onClose,\n    open = false,\n    PaperProps = {},\n    SlideProps,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Slide,\n    transitionDuration = defaultTransitionDuration,\n    variant = 'temporary'\n  } = props,\n        ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  const mounted = React.useRef(false);\n  React.useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const anchorInvariant = getAnchor(theme, anchorProp);\n  const anchor = anchorProp;\n\n  const ownerState = _extends({}, props, {\n    anchor,\n    elevation,\n    open,\n    variant\n  }, other);\n\n  const classes = useUtilityClasses(ownerState);\n\n  const drawer = /*#__PURE__*/_jsx(DrawerPaper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, PaperProps.className),\n    ownerState: ownerState,\n    children: children\n  }));\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/_jsx(DrawerDockedRoot, _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: drawer\n    }));\n  }\n\n  const slidingDrawer = /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchorInvariant],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps, {\n    children: drawer\n  }));\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/_jsx(DrawerDockedRoot, _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: slidingDrawer\n    }));\n  } // variant === temporary\n\n\n  return /*#__PURE__*/_jsx(DrawerRoot, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration\n    }),\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    ownerState: ownerState,\n    onClose: onClose,\n    hideBackdrop: hideBackdrop,\n    ref: ref\n  }, other, ModalProps, {\n    children: slidingDrawer\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   * @default 'left'\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   * @default 16\n   */\n  elevation: integerPropType,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   * @default {}\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   * @default 'temporary'\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default Drawer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"container\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef, HTMLElementType, chainPropTypes } from '@mui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration, easing } from '../styles/createTransitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so it can't be seen on the screen.\n// Later, we're going to translate the node back to its original location with `none`.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getTranslateValue(direction, node, resolvedContainer) {\n  const rect = node.getBoundingClientRect();\n  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    if (containerRect) {\n      return `translateX(${containerRect.right + offsetX - rect.left}px)`;\n    }\n\n    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    if (containerRect) {\n      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;\n    }\n\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    if (containerRect) {\n      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;\n    }\n\n    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  if (containerRect) {\n    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;\n  }\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nfunction resolveContainer(containerPropProp) {\n  return typeof containerPropProp === 'function' ? containerPropProp() : containerPropProp;\n}\n\nexport function setTranslateValue(direction, node, containerProp) {\n  const resolvedContainer = resolveContainer(containerProp);\n  const transform = getTranslateValue(direction, node, resolvedContainer);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultEasing = {\n  enter: easing.easeOut,\n  exit: easing.sharp\n};\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    container: containerProp,\n    direction = 'down',\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node, containerProp);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    setTranslateValue(direction, node, containerProp);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(childrenRef.current, next);\n    }\n  };\n\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current, containerProp);\n    }\n  }, [direction, containerProp]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current, containerProp);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp, containerProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    appear: appear,\n    in: inProp,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the container the Slide is transitioning from.\n   */\n  container: chainPropTypes(PropTypes.oneOfType([HTMLElementType, PropTypes.func]), props => {\n    if (props.open) {\n      const resolvedContainer = resolveContainer(props.container);\n\n      if (resolvedContainer && resolvedContainer.nodeType === 1) {\n        const box = resolvedContainer.getBoundingClientRect();\n\n        if (process.env.NODE_ENV !== 'test' && box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error(['MUI: The `container` prop provided to the component is invalid.', 'The anchor element should be part of the document layout.', \"Make sure the element is present in the document or that it's not display none.\"].join('\\n'));\n        }\n      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== 'function' || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {\n        return new Error(['MUI: The `container` prop provided to the component is invalid.', 'It should be an HTML element instance.'].join('\\n'));\n      }\n    }\n\n    return null;\n  }),\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: easing.easeOut,\n   *   exit: easing.sharp,\n   * }\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  skipSx: true\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1\n}, ownerState.anchor === 'left' && {\n  right: 'auto'\n}, ownerState.anchor === 'right' && {\n  left: 'auto',\n  right: 0\n}, ownerState.anchor === 'top' && {\n  bottom: 'auto',\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  bottom: 0,\n  right: 0\n}));\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: _extends({\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }, style),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport { duration } from '../styles/createTransitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nexport function reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"sourceRoot":""}